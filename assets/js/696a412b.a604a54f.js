"use strict";(self.webpackChunkcogment_doc=self.webpackChunkcogment_doc||[]).push([[928],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var r=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=r.createContext({}),d=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=d(a),u=i,h=m["".concat(s,".").concat(u)]||m[u]||c[u]||n;return a?r.createElement(h,l(l({ref:t},p),{},{components:a})):r.createElement(h,l({ref:t},p))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,l=new Array(n);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var d=2;d<n;d++)l[d]=a[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7113:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var r=a(7462),i=(a(7294),a(3905));const n={title:"Server",sidebar_position:1},l="Trial Datastore Server",o={unversionedId:"reference/cli/trial-datastore/trial-datastore-server",id:"reference/cli/trial-datastore/trial-datastore-server",title:"Server",description:"This module is still in active development and should be considered a prerelease version.",source:"@site/docs/reference/cli/trial-datastore/trial-datastore-server.md",sourceDirName:"reference/cli/trial-datastore",slug:"/reference/cli/trial-datastore/trial-datastore-server",permalink:"/docs/reference/cli/trial-datastore/trial-datastore-server",draft:!1,tags:[],version:"current",lastUpdatedAt:1680613010,formattedLastUpdatedAt:"Apr 4, 2023",sidebarPosition:1,frontMatter:{title:"Server",sidebar_position:1},sidebar:"docSidebar",previous:{title:"Client",permalink:"/docs/reference/cli/directory/directory-client"},next:{title:"Client",permalink:"/docs/reference/cli/trial-datastore/trial-datastore-client"}},s={},d=[{value:"Configuration",id:"configuration",level:2},{value:"<code>port</code>",id:"port",level:3},{value:"<code>grpc_reflection</code>",id:"grpc_reflection",level:3},{value:"<code>memory_storage_max_samples_size</code>",id:"memory_storage_max_samples_size",level:3},{value:"<code>file_storage</code>",id:"file_storage",level:3},{value:"<code>log_level</code>",id:"log_level",level:3},{value:"<code>log_file</code>",id:"log_file",level:3},{value:"<code>directory_endpoint</code>",id:"directory_endpoint",level:3},{value:"<code>directory_authentication_token</code>",id:"directory_authentication_token",level:3},{value:"<code>directory_registration_host</code>",id:"directory_registration_host",level:3},{value:"<code>directory_registration_properties</code>",id:"directory_registration_properties",level:3}],p={toc:d};function c(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"trial-datastore-server"},"Trial Datastore Server"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"This module is still in active development and should be considered a prerelease version.")),(0,i.kt)("p",null,"Cogment Trial Datastore implements the ",(0,i.kt)("a",{parentName:"p",href:"/docs/guide/core-concepts#additional-components"},"datalog API"),". It is designed to store the trajectory samples generated by the trials for online and offline usage."),(0,i.kt)("p",null,"The Cogment CLI also includes an implementation of a ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/cli/trial-datastore/trial-datastore-client"},"client"),"."),(0,i.kt)("p",null,"The Trial Datastore service included in the Cogment CLI can work in two modes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Memory storage"),", which is the default mode, stores the data in memory up to a maximum size and then evicts the least recently used samples."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"File storage")," stores the data on disk in a file. The storage engine relies on ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/etcd-io/bbolt"},"bbolt"),".")),(0,i.kt)("p",null,"The Trial Datastore service is simply called this way"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ cogment services trial_datastore --port=9000 --file_storage=./database.db\n")),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"The Trial Datastore configuration can be specified either through the command line or environment variables."),(0,i.kt)("h3",{id:"port"},(0,i.kt)("inlineCode",{parentName:"h3"},"port")),(0,i.kt)("p",null,"The TCP port where to offer gRPC services.\nThe Trial Datastore offers two services at the same TCP port: the ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/grpc#datalog-api"},"Datalog API")," and the ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/grpc#trial-datastore-api"},"Trial Datastore API"),".\nThe Datalog API is where the Datastore receives the raw trial data from the Orchestrator.\nThe Trial Datastore API is is where the Datastore delivers online or offline stored data (typically to actors for training)."),(0,i.kt)("p",null,"Can be specified as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a command line option, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"--port=12000"),","),(0,i.kt)("li",{parentName:"ul"},"an environment variable, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"COGMENT_TRIAL_DATASTORE_PORT=12000"),","),(0,i.kt)("li",{parentName:"ul"},"its default value is 9003.")),(0,i.kt)("h3",{id:"grpc_reflection"},(0,i.kt)("inlineCode",{parentName:"h3"},"grpc_reflection")),(0,i.kt)("p",null,"Whether or not to enable ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/grpc/grpc/blob/master/doc/server-reflection.md"},"gRPC reflection")," on the served endpoints."),(0,i.kt)("p",null,"Can be specified as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a command line flag, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"--grpc_reflection"),","),(0,i.kt)("li",{parentName:"ul"},"an environment variable, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"COGMENT_TRIAL_DATASTORE_GRPC_REFLECTION=1"),","),(0,i.kt)("li",{parentName:"ul"},"by default, it is disabled.")),(0,i.kt)("h3",{id:"memory_storage_max_samples_size"},(0,i.kt)("inlineCode",{parentName:"h3"},"memory_storage_max_samples_size")),(0,i.kt)("p",null,"This defines the maximum cumulated size of samples the memory storage holds before evicting least recently used trials samples. It is defined in bytes."),(0,i.kt)("p",null,"Can be specified as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a command line option, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"--memory_storage_max_samples_size=100000000"),","),(0,i.kt)("li",{parentName:"ul"},"an environment variable, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"COGMENT_TRIAL_DATASTORE_MEMORY_STORAGE_MAX_SAMPLE_SIZE=100000000"),","),(0,i.kt)("li",{parentName:"ul"},"its default value is 1073741824 Bytes, i.e. 1GB.")),(0,i.kt)("h3",{id:"file_storage"},(0,i.kt)("inlineCode",{parentName:"h3"},"file_storage")),(0,i.kt)("p",null,"Path to the database file used by the file storage. If provided, the trial datastore will use the file storage."),(0,i.kt)("p",null,"Can be specified as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a command line flag, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"--file_storage"),", to use the default value ",(0,i.kt)("inlineCode",{parentName:"li"},".cogment/trial_datastore.db"),","),(0,i.kt)("li",{parentName:"ul"},"a command line option, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"--file_storage=./path/to/trial_datastore.db"),","),(0,i.kt)("li",{parentName:"ul"},"an environment variable, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"COGMENT_TRIAL_DATASTORE_FILE_STORAGE_PATH=./path/to/trial_datastore.db"),","),(0,i.kt)("li",{parentName:"ul"},"it has no default value.")),(0,i.kt)("h3",{id:"log_level"},(0,i.kt)("inlineCode",{parentName:"h3"},"log_level")),(0,i.kt)("p",null,"Set to define the minimum level for logging. Possible values are: ",(0,i.kt)("inlineCode",{parentName:"p"},"off"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"error"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"warning"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"info"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"debug"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"trace"),". Note however that all trace and most debug level logs will only output if running the debug compiled version of the Orchestrator."),(0,i.kt)("p",null,"Can be specified as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a command line option, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"--log_level=debug"),","),(0,i.kt)("li",{parentName:"ul"},"an environment variable, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"COGMENT_LOG_LEVEL=5"),","),(0,i.kt)("li",{parentName:"ul"},"default value is info.")),(0,i.kt)("h3",{id:"log_file"},(0,i.kt)("inlineCode",{parentName:"h3"},"log_file")),(0,i.kt)("p",null,"Base file name for daily log output. The name will be suffixed with the date and a new file will be made every day. If not provided the logs go to stdout."),(0,i.kt)("p",null,"Can be specified as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a command line option, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"--log_file=./path/to/cogment.log"),","),(0,i.kt)("li",{parentName:"ul"},"an environment variable, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"COGMENT_LOG_FILE=./path/to/cogment.log"),","),(0,i.kt)("li",{parentName:"ul"},"default value is info.")),(0,i.kt)("h3",{id:"directory_endpoint"},(0,i.kt)("inlineCode",{parentName:"h3"},"directory_endpoint")),(0,i.kt)("p",null,"Cogment endpoint of the directory service. It must be a ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/parameters#grpc-scheme"},"gRPC endpoint"),". The directory will be used to register the trial datastore services for discovery by other services. If not provided, the trial datastore will not auto register, in which case manual registration to the directory must be done, or an explicit address must be provided to access the services of the trial datastore."),(0,i.kt)("p",null,"Can be specified as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a command line option, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"--directory_endpoint=grpc://foo:9005"),","),(0,i.kt)("li",{parentName:"ul"},"an environment variable, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"COGMENT_DIRECTORY_ENDPOINT=grpc://foo:9005"),","),(0,i.kt)("li",{parentName:"ul"},"it has no default value.")),(0,i.kt)("h3",{id:"directory_authentication_token"},(0,i.kt)("inlineCode",{parentName:"h3"},"directory_authentication_token")),(0,i.kt)("p",null,"Authentication token for services registered in the Directory. It is recorded in the Directory when registering a service. And a matching token must be provided to inquire for the service. An empty token is the same as no token."),(0,i.kt)("p",null,"Can be specified as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a command line option, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"--directory_authentication_token=GH670ploT"),","),(0,i.kt)("li",{parentName:"ul"},"an environment variable, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"COGMENT_DIRECTORY_AUTHENTICATION_TOKEN=GH670ploT"),","),(0,i.kt)("li",{parentName:"ul"},"it has no default value.")),(0,i.kt)("h3",{id:"directory_registration_host"},(0,i.kt)("inlineCode",{parentName:"h3"},"directory_registration_host")),(0,i.kt)("p",null,"This is the host that will be registered to the Directory for the Trial Datastore services. If not provided, the Trial Datastore will determine its own IP address and use that as the registration host."),(0,i.kt)("p",null,"In some circumstances, the IP address determined by Cogment may be wrong (e.g. multiple interfaces, load balancing, firewall), thus a host (hostname or IP address) must be explicitly provided."),(0,i.kt)("p",null,"Can be specified as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a command line option, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"--directory_registration_host=foo.bar"),","),(0,i.kt)("li",{parentName:"ul"},"an environment variable, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"COGMENT_TRIAL_DATASTORE_DIRECTORY_REGISTRATION_HOST=foo.bar"),","),(0,i.kt)("li",{parentName:"ul"},"it has no default value (i.e. self determined IP address is used).")),(0,i.kt)("h3",{id:"directory_registration_properties"},(0,i.kt)("inlineCode",{parentName:"h3"},"directory_registration_properties")),(0,i.kt)("p",null,'These are the properties that will be registered to the Directory for the Trial Datastore services. When inquiring the Directory, the properties inquired must match the properties registered. This is a string representing multiple properties in the form "name=value,name=value,name=value" where the values are optional.'),(0,i.kt)("p",null,"Can be specified as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a command line option, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},'--directory_registration_properties="Sim=20,hpp,mem=HIGH"'),","),(0,i.kt)("li",{parentName:"ul"},"an environment variable, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},'COGMENT_TRIAL_DATASTORE_DIRECTORY_REGISTRATION_PROPERTIES="Sim=20,hpp,mem=HIGH"'),","),(0,i.kt)("li",{parentName:"ul"},"it has no default value.")))}c.isMDXComponent=!0}}]);