"use strict";(self.webpackChunkcogment_doc=self.webpackChunkcogment_doc||[]).push([[89],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(t),d=a,h=m["".concat(c,".").concat(d)]||m[d]||u[d]||l;return t?r.createElement(h,i(i({ref:n},p),{},{components:t})):r.createElement(h,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5432:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=t(3117),a=(t(7294),t(3905));const l={},i=void 0,o={unversionedId:"reference/cli/launch",id:"reference/cli/launch",title:"launch",description:"---",source:"@site/docs/reference/cli/launch.md",sourceDirName:"reference/cli",slug:"/reference/cli/launch",permalink:"/docs/reference/cli/launch",draft:!1,tags:[],version:"current",lastUpdatedAt:1667939499,formattedLastUpdatedAt:"11/8/2022",frontMatter:{},sidebar:"docSidebar",previous:{title:"Model Registry",permalink:"/docs/reference/cli/model-registry"},next:{title:"Python SDK",permalink:"/docs/reference/python"}},c={},s=[{value:"sidebar_position: 5",id:"sidebar_position-5",level:2},{value:"Command line",id:"command-line",level:2},{value:"launch.yaml",id:"launchyaml",level:2},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Variable substitution",id:"variable-substitution",level:2},{value:"Working directory",id:"working-directory",level:2}],p={toc:s};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("hr",null),(0,a.kt)("p",null,"title: Launch"),(0,a.kt)("h2",{id:"sidebar_position-5"},"sidebar_position: 5"),(0,a.kt)("h1",{id:"launch"},"Launch"),(0,a.kt)("p",null,"Launch is a utility command meant to faciliate locally launching and shutting down an entire cogment project at once."),(0,a.kt)("p",null,"When launch is used, a set of processes will be launched, as described by a yaml file. Once any of these processes terminates, all other ones will be terminated as well."),(0,a.kt)("h2",{id:"command-line"},"Command line"),(0,a.kt)("p",null,"Launch is a command that takes a single parameter: a yaml file describing the processes to launch."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ cogment launch ./launch.yaml\n")),(0,a.kt)("h2",{id:"launchyaml"},"launch.yaml"),(0,a.kt)("p",null,"The launch yaml file consists of a single top-level object called ",(0,a.kt)("inlineCode",{parentName:"p"},"scripts"),"."),(0,a.kt)("p",null,"Each property of ",(0,a.kt)("inlineCode",{parentName:"p"},"scripts")," represents one of the processes to run. It will be done by running the contents of the ",(0,a.kt)("inlineCode",{parentName:"p"},"commands")," property in sequence"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'scripts:\n  process_a:\n    commands:\n      - ["python", "env/main.py"]\n\n  process_b:\n    commands:\n      - ["cogment", "service", "orchestrator"]\n')),(0,a.kt)("h2",{id:"environment-variables"},"Environment Variables"),(0,a.kt)("p",null,"You can specify environment variables to set using the ",(0,a.kt)("inlineCode",{parentName:"p"},"environment")," property of scripts:"),(0,a.kt)("p",null,"E.g."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'\nscripts:\n  orchestrator:\n    environment:\n      COGMENT_ORCHESTRATOR_ACTOR_PORT: 9000\n    commands:\n      - ["cogment", "services", "orchestrator"]\n\n')),(0,a.kt)("h2",{id:"variable-substitution"},"Variable substitution"),(0,a.kt)("p",null,"You can use to environment variables using ",(0,a.kt)("inlineCode",{parentName:"p"},"{{.VAR_NAME}}")," anywhere whitin the grammar. Variables set using ",(0,a.kt)("inlineCode",{parentName:"p"},"environment")," will be also available within ",(0,a.kt)("inlineCode",{parentName:"p"},"commands"),"."),(0,a.kt)("p",null,"E.g."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'scripts:\n  say_hi:\n    commands:\n      - ["echo", "Hello, {{.USER}}"]\n\n')),(0,a.kt)("p",null,"N.B. Technically, it uses ",(0,a.kt)("a",{parentName:"p",href:"https://pkg.go.dev/text/template"},"go text templates"),", where the root object is a dictionnary of the available environment variables."),(0,a.kt)("h2",{id:"working-directory"},"Working directory"),(0,a.kt)("p",null,"By default, the current working directory is set to the folder containing the launch script. You can override that behavior with the ",(0,a.kt)("inlineCode",{parentName:"p"},"dir")," property:"),(0,a.kt)("p",null,"E.g."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'scripts:\n  dir: environment\n  commands:\n    - ["python", "main.py"]\n')))}u.isMDXComponent=!0}}]);